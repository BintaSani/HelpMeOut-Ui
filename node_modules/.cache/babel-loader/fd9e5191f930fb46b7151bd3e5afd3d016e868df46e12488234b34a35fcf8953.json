{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport { FacebookAuthProvider } from 'firebase/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\n\n// Your web app's Firebase configuration\nconst Config = {\n  apiKey: \"AIzaSyASUJlnUutu5AN9CXXcxyAC1cwX7P_Ez54\",\n  authDomain: \"chrome-ext-40d06.firebaseapp.com\",\n  projectId: \"chrome-ext-40d06\",\n  storageBucket: \"chrome-ext-40d06.firebasestorage.app\",\n  messagingSenderId: \"681316511872\",\n  appId: \"1:681316511872:web:5245c7dad8f6726b003665\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(Config);\nexport const CreateUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  // Fixed typo in path to user document\n  const userRef = firestore.doc(`user/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n  if (!snapshot.exists) {\n    const {\n      email,\n      displayName,\n      photoURL\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        photoURL,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.error('Error creating user profile', error.message); // Improved error logging\n    }\n  }\n\n  return userRef;\n};\n\n// Export auth and firestore references\n_c = CreateUserProfileDocument;\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n// Google Sign-in Provider\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\n\n// export const SignInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport const SignInWithGoogle = navigate => {\n  auth.signInWithPopup(googleProvider).then(result => {\n    // Successful login\n    navigate('/library');\n  }).catch(error => {\n    console.error('Error during Google authentication:', error.message);\n  });\n};\n\n// Facebook Sign-in Provider\n_c2 = SignInWithGoogle;\nconst facebookProvider = new FacebookAuthProvider();\nexport const SignInWithFacebook = navigate => {\n  auth.signInWithPopup(facebookProvider).then(result => {\n    // Handle successful authentication\n    navigate('/library');\n    console.log('Facebook user:', result.user);\n  }).catch(error => {\n    // Handle errors\n    if (error.code === 'auth/popup-closed-by-user') {\n      console.log('User closed the popup before completing the operation.');\n    } else {\n      console.error('Error during Facebook authentication:', error);\n    }\n  });\n};\n\n// Request custom Firebase token from your server\n_c3 = SignInWithFacebook;\nexport const requestCustomToken = async uid => {\n  let storedUid = uid;\n  try {\n    const response = await fetch('https://helpmeout-be.vercel.app/generate-token', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        storedUid\n      })\n    });\n    if (!response.ok) throw new Error('Failed to fetch custom token');\n    const {\n      token\n    } = await response.json();\n    return token;\n  } catch (error) {\n    console.error('Error requesting custom token:', error.message); // More specific error message\n    throw error;\n  }\n};\nconst sendTokenToExtension = async uid => {\n  try {\n    const token = await requestCustomToken(uid); // Assume you get the token here\n\n    // Post message to the window (your extension's content script)\n    window.postMessage({\n      type: 'SEND_TOKEN',\n      token: token,\n      uid\n    }, '*');\n    // console.log(token,'UID:', uid)\n  } catch (error) {\n    console.error('Failed to send token:', error);\n  }\n};\nauth.onAuthStateChanged(user => {\n  if (user) {\n    // console.log(user);\n    // CreateUserProfileDocument(user);\n  } else {\n    console.error('No user is signed in.');\n  }\n});\nwindow.addEventListener('message', event => {\n  // Ensure the request is from the extension\n  if (event.data.type !== 'REQUEST_UID_AND_TOKEN') return;\n  console.log('Received request for UID and token from content script');\n\n  // Check if user is logged in\n  const user = auth.currentUser;\n  if (user) {\n    console.log('User is logged in:', user.uid);\n    sendTokenToExtension(user.uid);\n  } else {\n    console.error('No user signed in.');\n  }\n});\nexport default firebase;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CreateUserProfileDocument\");\n$RefreshReg$(_c2, \"SignInWithGoogle\");\n$RefreshReg$(_c3, \"SignInWithFacebook\");","map":{"version":3,"names":["firebase","FacebookAuthProvider","Config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","CreateUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","exists","email","displayName","photoURL","createdAt","Date","set","error","console","message","_c","auth","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","SignInWithGoogle","navigate","signInWithPopup","then","result","catch","_c2","facebookProvider","SignInWithFacebook","log","user","code","_c3","requestCustomToken","storedUid","response","fetch","method","headers","body","JSON","stringify","ok","Error","token","json","sendTokenToExtension","window","postMessage","type","onAuthStateChanged","addEventListener","event","data","currentUser","$RefreshReg$"],"sources":["C:/Users/Admin/HelpMeOut-Ui/src/component/utils/firebase/firebase.js"],"sourcesContent":["\r\n\r\nimport firebase from 'firebase/compat/app';\r\nimport { FacebookAuthProvider } from 'firebase/auth';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/auth';\r\n\r\n// Your web app's Firebase configuration\r\nconst Config = {\r\n  apiKey: \"AIzaSyASUJlnUutu5AN9CXXcxyAC1cwX7P_Ez54\",\r\n  authDomain: \"chrome-ext-40d06.firebaseapp.com\",\r\n  projectId: \"chrome-ext-40d06\",\r\n  storageBucket: \"chrome-ext-40d06.firebasestorage.app\",\r\n  messagingSenderId: \"681316511872\",\r\n  appId: \"1:681316511872:web:5245c7dad8f6726b003665\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(Config);\r\n\r\nexport const CreateUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n\r\n  // Fixed typo in path to user document\r\n  const userRef = firestore.doc(`user/${userAuth.uid}`);\r\n  const snapshot = await userRef.get();\r\n\r\n  if (!snapshot.exists) {\r\n    const { email, displayName, photoURL } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        photoURL,\r\n        email,\r\n        createdAt,\r\n        ...additionalData\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating user profile', error.message); // Improved error logging\r\n    }\r\n  }\r\n\r\n  return userRef;\r\n};\r\n\r\n// Export auth and firestore references\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n// Google Sign-in Provider\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\r\n\r\n// export const SignInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\nexport const SignInWithGoogle = (navigate) => {\r\n  auth.signInWithPopup(googleProvider)\r\n      .then((result) => {\r\n          // Successful login\r\n          navigate('/library');\r\n      })\r\n      .catch((error) => {\r\n          console.error('Error during Google authentication:', error.message);\r\n      });\r\n};\r\n\r\n\r\n// Facebook Sign-in Provider\r\nconst facebookProvider = new FacebookAuthProvider();\r\n\r\nexport const SignInWithFacebook = (navigate) => {\r\n  auth.signInWithPopup(facebookProvider)\r\n    .then((result) => {\r\n      // Handle successful authentication\r\n      navigate('/library');\r\n      console.log('Facebook user:', result.user);\r\n    })\r\n    .catch((error) => {\r\n      // Handle errors\r\n      if (error.code === 'auth/popup-closed-by-user') {\r\n        console.log('User closed the popup before completing the operation.');\r\n      } else {\r\n        console.error('Error during Facebook authentication:', error);\r\n      }\r\n    });\r\n};\r\n\r\n// Request custom Firebase token from your server\r\nexport const requestCustomToken = async (uid) => {\r\n  let storedUid = uid;\r\n  try {\r\n    const response = await fetch('https://helpmeout-be.vercel.app/generate-token', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ storedUid })\r\n    });\r\n    \r\n    if (!response.ok) throw new Error('Failed to fetch custom token');\r\n    \r\n    const { token } = await response.json();\r\n    return token;\r\n  } catch (error) {\r\n    console.error('Error requesting custom token:', error.message); // More specific error message\r\n    throw error;\r\n  }\r\n};\r\nconst sendTokenToExtension = async (uid) => {\r\n  try {\r\n    const token = await requestCustomToken(uid);  // Assume you get the token here\r\n\r\n    // Post message to the window (your extension's content script)\r\n    window.postMessage({ type: 'SEND_TOKEN', token: token, uid }, '*');\r\n    // console.log(token,'UID:', uid)\r\n  } catch (error) {\r\n    console.error('Failed to send token:', error);\r\n  }\r\n};\r\nauth.onAuthStateChanged((user) => {\r\n  if (user) {\r\n  // console.log(user);\r\n  // CreateUserProfileDocument(user);\r\n    \r\n    \r\n  } else {\r\n    console.error('No user is signed in.');\r\n  }\r\n});\r\nwindow.addEventListener('message', (event) => {\r\n  // Ensure the request is from the extension\r\n  if (event.data.type !== 'REQUEST_UID_AND_TOKEN') return;\r\n\r\n  console.log('Received request for UID and token from content script');\r\n\r\n  // Check if user is logged in\r\n  const user = auth.currentUser;\r\n  if (user) {\r\n    console.log('User is logged in:', user.uid);\r\n    sendTokenToExtension(user.uid);\r\n  } else {\r\n    console.error('No user signed in.');\r\n  }\r\n});\r\n\r\nexport default firebase;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}