[{"C:\\Users\\Admin\\HelpMeOut-Ui\\src\\index.js":"1","C:\\Users\\Admin\\HelpMeOut-Ui\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\HelpMeOut-Ui\\src\\App.js":"3","C:\\Users\\Admin\\HelpMeOut-Ui\\src\\pages\\signuppage\\signuppage.jsx":"4","C:\\Users\\Admin\\HelpMeOut-Ui\\src\\pages\\recorded-media-page\\recorded-media-page.jsx":"5","C:\\Users\\Admin\\HelpMeOut-Ui\\src\\pages\\library\\library.jsx":"6","C:\\Users\\Admin\\HelpMeOut-Ui\\src\\pages\\homepage\\homepage.jsx":"7","C:\\Users\\Admin\\HelpMeOut-Ui\\src\\pages\\view\\viewpage.jsx":"8","C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\signup\\signup.jsx":"9","C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\library\\library.jsx":"10","C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\header\\header.jsx":"11","C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\recorded-media\\recorded-media.jsx":"12","C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\main\\main.jsx":"13","C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\features\\features.jsx":"14","C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\utils\\firebase\\firebase.js":"15","C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\howitWorks\\howitWorks.jsx":"16","C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\footer\\footer.jsx":"17","C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\view\\view.jsx":"18","C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\video\\video.jsx":"19","C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\dotGrid\\dotGrid.jsx":"20"},{"size":628,"mtime":1741173694778,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1741173694778,"results":"23","hashOfConfig":"22"},{"size":788,"mtime":1741173694663,"results":"24","hashOfConfig":"22"},{"size":593,"mtime":1741173694778,"results":"25","hashOfConfig":"22"},{"size":336,"mtime":1741173694778,"results":"26","hashOfConfig":"22"},{"size":2324,"mtime":1741173694778,"results":"27","hashOfConfig":"22"},{"size":851,"mtime":1741173694778,"results":"28","hashOfConfig":"22"},{"size":2164,"mtime":1741173694778,"results":"29","hashOfConfig":"22"},{"size":2664,"mtime":1741173694760,"results":"30","hashOfConfig":"22"},{"size":3712,"mtime":1741173694760,"results":"31","hashOfConfig":"22"},{"size":931,"mtime":1741173694744,"results":"32","hashOfConfig":"22"},{"size":11815,"mtime":1741180320804,"results":"33","hashOfConfig":"22"},{"size":1378,"mtime":1741173694760,"results":"34","hashOfConfig":"22"},{"size":2889,"mtime":1741173694744,"results":"35","hashOfConfig":"22"},{"size":4333,"mtime":1741175662823,"results":"36","hashOfConfig":"22"},{"size":2049,"mtime":1741173694744,"results":"37","hashOfConfig":"22"},{"size":1111,"mtime":1741173694744,"results":"38","hashOfConfig":"22"},{"size":11950,"mtime":1741180277397,"results":"39","hashOfConfig":"22"},{"size":5409,"mtime":1741175872921,"results":"40","hashOfConfig":"22"},{"size":628,"mtime":1741173694744,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gufuzx",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\HelpMeOut-Ui\\src\\index.js",[],[],"C:\\Users\\Admin\\HelpMeOut-Ui\\src\\reportWebVitals.js",[],[],"C:\\Users\\Admin\\HelpMeOut-Ui\\src\\App.js",[],[],"C:\\Users\\Admin\\HelpMeOut-Ui\\src\\pages\\signuppage\\signuppage.jsx",[],[],"C:\\Users\\Admin\\HelpMeOut-Ui\\src\\pages\\recorded-media-page\\recorded-media-page.jsx",[],[],"C:\\Users\\Admin\\HelpMeOut-Ui\\src\\pages\\library\\library.jsx",[],[],"C:\\Users\\Admin\\HelpMeOut-Ui\\src\\pages\\homepage\\homepage.jsx",[],[],"C:\\Users\\Admin\\HelpMeOut-Ui\\src\\pages\\view\\viewpage.jsx",[],[],"C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\signup\\signup.jsx",[],[],"C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\library\\library.jsx",[],[],"C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\header\\header.jsx",[],[],"C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\recorded-media\\recorded-media.jsx",["103"],[],"import React, { useState, useEffect } from 'react';\r\nimport {  useSearchParams } from 'react-router-dom';\r\nimport { ReactComponent as Edit } from '../../assets/edit.svg';\r\nimport { ReactComponent as Copy } from '../../assets/copy.svg';\r\nimport { ReactComponent as FB } from '../../assets/Facebook svg.svg';\r\nimport { ReactComponent as WhatsaApp } from '../../assets/whatsapp.svg';\r\nimport { ReactComponent as Telegram } from '../../assets/Telegram svg.svg';\r\n// import axios from 'axios';\r\nimport './recorded-media.scss';\r\nimport Header from '../header/header';\r\nimport Footer from '../footer/footer';\r\nimport Video from '../video/video';\r\n\r\n\r\nconst RecordedMedia = () => {\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [newVideoName, setNewVideoName] = useState('');\r\n  const [searchParams] = useSearchParams();\r\n  const FileName = searchParams.get('filename');\r\n  const playBack = searchParams.get('recording');\r\n  // const transcription = searchParams.get('transcript');\r\n  const [transcript, setTranscript] = useState(null);\r\n  const [translatedTranscript, setTranslatedTranscript] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [language, setLanguage] = useState('en'); // Default language is English\r\n  const [recipientEmail, setRecipientEmail] = useState('');\r\n    const [filename, setFilename] = useState(() =>\r\n        // window.location.search('filename')\r\n        FileName ? FileName : ''\r\n    );\r\n    \r\n\r\n    const handleLanguageChange = (event) => {\r\n      setLanguage(event.target.value);\r\n    };\r\n\r\n    const copyVideo = async (url) => {\r\n        if (navigator.clipboard) {\r\n          await navigator.clipboard\r\n            .writeText(url)\r\n            .then(function () {\r\n              alert('URL copied to clipboard')\r\n            })\r\n            .catch(function (err) {\r\n              console.error('Failed to copy URL: ' + err);\r\n            });\r\n        } else {\r\n          console.log(\"can't copy on this device\");\r\n        }\r\n      }\r\n    \r\n\r\n    const handleSendEmail = () => {\r\n      const subject = encodeURIComponent('Check out this video!');\r\n      const body = encodeURIComponent(`Hi there, Here is a video I thought you might enjoy: ${playBack} \\nBest regards,`);\r\n      window.location.href = `mailto:${recipientEmail}?subject=${subject}&body=${body}`;\r\n    };\r\n\r\n      \r\n    const handleInputChange = (e) => {\r\n      setNewVideoName(e.target.value);\r\n  };\r\n\r\n      useEffect(() => {\r\n        // fetchLanguages();\r\n     \r\n        \r\n        const fetchTranscript = async () => {\r\n          \r\n          try {\r\n                \r\n            const revaiResponse =await fetch('https://helpmeout-be.vercel.app/transcribe', {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify({ playBack }),\r\n            });\r\n            if (!revaiResponse.ok) {\r\n                console.error('Error sending video to Rev.ai:', revaiResponse.statusText);\r\n                return;\r\n              }\r\n              await new Promise(resolve => setTimeout(resolve, 30000)); \r\n              const revaiData = await revaiResponse.json();\r\n              console.log('Rev.ai response:', revaiData);\r\n             \r\n              const jobId = revaiData.id || 'vSaaIZPHBeVUSfQP' || 'nbsTU2yd9BCHPlJE';\r\n         \r\n            // URL for fetching the transcript\r\n            \r\n            const url = `https://helpmeout-be.vercel.app/transcript/${jobId}?language=${language}`;\r\n    \r\n            // Fetch the transcript text\r\n            const response = await fetch(url);\r\n            const text = await response.text(); // Get the response as plain text\r\n            setTranscript(text); setTranslatedTranscript(text);\r\n    \r\n            \r\n          } catch (error) {\r\n            console.error('Error fetching or translating transcript:', error.message);\r\n          } finally {\r\n            setIsLoading(false); // Set loading state to false once done\r\n          }\r\n        };\r\n    \r\n        // Fetch the transcript if `jobId` exists\r\n        // if (jobId) {\r\n          fetchTranscript();\r\n        // }\r\n      }, [language, playBack ]); // Dependencies: language and transcription\r\n      \r\n      const renameVideo = async (publicId, newName) => {\r\n        try {\r\n          const response = await fetch('https://helpmeout-be.vercel.app/api/videos/rename', {\r\n            method: 'PUT', // Change to PUT method as per your backend\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ public_id: publicId, new_name: newName }), // Send correct fields\r\n          });\r\n      \r\n          if (!response.ok) {\r\n            throw new Error('Failed to rename video');\r\n          }\r\n      \r\n          // const result = await response.json();\r\n          // console.log('Rename Successful:', result);\r\n          alert('Rename Successful');\r\n        } catch (error) {\r\n          console.error('Error renaming video:', error);\r\n        }\r\n      };\r\n      \r\n      \r\n      \r\n    \r\n    \r\n    return(\r\n        <div className='recorded-media'>\r\n            <Header/>\r\n            <div className='cont3'>\r\n                <div className='send'>\r\n                    <h1>Your video is ready!</h1>\r\n                    <div className='edit'>\r\n                        <label htmlFor='edit'>Name</label>\r\n                        <div className='edit-cont'>\r\n                            <input \r\n                            disabled={disabled}\r\n                            value={disabled ? filename.replace(/^HMO_([^/]+)\\/[^/]+\\/([^/]+\\.webm)$/, 'HMO_$2') : newVideoName}\r\n                            onChange={handleInputChange}\r\n                            placeholder='HelpMeOut_Video_20232509'\r\n                            type='text' id='edit'/>\r\n                            <div className='edit-icons'>\r\n                              { disabled === true ?\r\n                                <Edit onClick={() => setDisabled(!disabled)}/> :\r\n                                <button onClick={() => { \r\n                                  renameVideo(filename.replace(/^HMO_/, '').replace(/\\.webm$/, ''), newVideoName);\r\n                                  setDisabled(true);}}>\r\n                                  Save\r\n                              </button>}\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className='send-cont'>\r\n                        <input \r\n                        placeholder='enter email of receiver'\r\n                        value={recipientEmail}\r\n                        onChange={(e) => setRecipientEmail(e.target.value)}\r\n                        type='email' \r\n                        id='email'\r\n                        />\r\n                        <button onClick={handleSendEmail}>\r\n                            Send\r\n                        </button>\r\n                          \r\n                    </div>\r\n                    <div className='video-url'>\r\n                        <label htmlFor='link'>Video Url</label>\r\n                        <div className='link-cont'>\r\n                            <input \r\n                            placeholder={playBack ? playBack : 'https://www.helpmeout/HelpMeOut_Video_20232509'}\r\n                            type='link' id='link'/>\r\n                            <button>\r\n                            <Copy onClick={() => copyVideo(playBack ? playBack : '')}/> Copy\r\n                            </button>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className='share-vid'>\r\n                        <h2>Share your video</h2>\r\n                    </div>\r\n                    <div className='socials-cont'>\r\n                        <button className='socials'>\r\n                            <div>\r\n                                <FB/>\r\n                            </div>\r\n                            <p>Facebook</p>\r\n                        </button>\r\n                        <button className='socials'>\r\n                            <div>\r\n                                <WhatsaApp/>\r\n                            </div>\r\n                            <p>WhatsApp</p>\r\n                        </button>\r\n                        <button className='socials'>\r\n                            <div>\r\n                                <Telegram/>\r\n                            </div>\r\n                            <p>Telegram</p>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"vid-cont\">\r\n                    <div className='video-cont'>\r\n                        {/* <video src=\"\" width=\"100%\" height=\"100%\" className='vid' controls></video> */}\r\n                        <Video source={playBack}/>\r\n                    </div>\r\n                    <div className='transcript-cont'>\r\n                        <h5>Transcript</h5>\r\n                        <select name='language' id='language' onChange={handleLanguageChange} value={language}>\r\n                            <option className='option' value=\"en_GB\">English</option> \r\n                            {/* <option className='option' value=\"fr\">French</option> \r\n                            <option className='option' value=\"es\">Spanish</option> \r\n                            <option className='option' value=\"de\">German</option>  */}\r\n                        </select>\r\n                    </div>\r\n                    <div className='transcript'>\r\n                        \r\n\r\n                        <div className='one subtitle'>\r\n                            {transcript ? (\r\n                                <span className='text'>{transcript}</span>\r\n                            ) : (\r\n                                <p>No transcript available.</p>\r\n                            )}\r\n                            {/* <span>0.01</span>\r\n                            <span className='text'>First step. Open Facebook on your desktop or mobile device and locate \"Marketplace\" in the left-hand menu or at the top of the </span> */}\r\n                        </div>\r\n                        <div className='two subtitle'>\r\n                        {isLoading ? (\r\n                                <p>Loading transcript...</p>\r\n                            ) : (\r\n                                <span className='text'>{translatedTranscript || \"No transcript available\"}</span>\r\n                            )}\r\n                        </div>\r\n                        {/* <div className='three subtitle'>\r\n                            <span>0.03</span>\r\n                            <span className='text'>First step. Open Facebook on your desktop or mobile device and locate \"Marketplace\" in the left-hand menu or at the top of the </span>\r\n                        </div>\r\n                        <div className='four subtitle'>\r\n                            <span>0.04</span>\r\n                            <span className='text'>First step. Open Facebook on your desktop or mobile device and locate \"Marketplace\" in the left-hand menu or at the top of the </span>\r\n                        </div> */}\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='create-account'>\r\n                <div className='cont4'>\r\n                    <h4>To ensure the availability and privacy of your video, we recommend saving it to your account.</h4>\r\n                    <div><button> <a href=\"/library\">Save Video</a></button></div>\r\n                    <h1>Don't have an account? <a className='link' href='/signup'>Create account</a></h1> \r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecordedMedia;","C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\main\\main.jsx",[],[],"C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\features\\features.jsx",[],[],"C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\utils\\firebase\\firebase.js",[],[],"C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\howitWorks\\howitWorks.jsx",[],[],"C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\footer\\footer.jsx",[],[],"C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\view\\view.jsx",[],[],"C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\video\\video.jsx",[],[],"C:\\Users\\Admin\\HelpMeOut-Ui\\src\\component\\dotGrid\\dotGrid.jsx",[],[],{"ruleId":"104","severity":1,"message":"105","line":27,"column":22,"nodeType":"106","messageId":"107","endLine":27,"endColumn":33},"no-unused-vars","'setFilename' is assigned a value but never used.","Identifier","unusedVar"]